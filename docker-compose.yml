services:
  inqueue-service:
    restart: always
    image: ${DOCKERHUB_USERNAME}/inqueue:latest
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_DATA_REDIS_HOST: docker-redis
      SPRING_DATASOURCE_HOST: docker-mysql
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      MEMBER_ACCOUNT_CLIENT_ID_SIZE: ${MEMBER_ACCOUNT_CLIENT_ID_SIZE}
      MEMBER_ACCOUNT_CLIENT_SECRET_SIZE: ${MEMBER_ACCOUNT_CLIENT_SECRET_SIZE}
      JWT_TOKEN_SECRET_KEY: ${JWT_TOKEN_SECRET_KEY}
      JWT_TOKEN_EXPIRATION_MILLS: ${JWT_TOKEN_EXPIRATION_MILLS}
      AES256_SECRET_KEY: ${AES256_SECRET_KEY}
    ports:
      - "8080:8080"
    depends_on:
      docker-mysql:
        condition: service_healthy
      docker-redis:
        condition: service_healthy
    networks:
      - inqueue

  docker-mysql:
    container_name: docker-mysql
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: inqueue
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - inqueue_db_data:/var/lib/mysql
      - ./scripts/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - inqueue
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  docker-redis:
    container_name: docker-redis
    image: redis:7.0.11
    ports:
      - "6379:6379"
    networks:
      - inqueue
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  inqueue_db_data:

networks:
  inqueue:
    driver: bridge